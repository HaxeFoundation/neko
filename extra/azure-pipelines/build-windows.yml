parameters:
  name: 'BuildWindows'
  vmImage: ''
  cmakeGenerator: ''
  arch: ''
  config: 'RelWithDebInfo'

jobs:
  - job: ${{ parameters.name }}
    pool:
      vmImage: ${{ parameters.vmImage }}
    steps:
      - ${{ if startsWith(parameters.name, 'WinVS2017') }}:
        - powershell: |
            choco install visualstudio2017buildtools visualstudio2017-workload-vctools
            # Install: Windows 8.1 SDK
            Invoke-WebRequest -Method Get -Uri https://go.microsoft.com/fwlink/p/?LinkId=323507 -OutFile sdksetup.exe -UseBasicParsing
            Start-Process -Wait sdksetup.exe -ArgumentList "/q", "/norestart", "/features", "OptionId.WindowsDesktopSoftwareDevelopmentKit", "OptionId.NetFxSoftwareDevelopmentKit"
          displayName: Install VS2017 tools
      - ${{ if startsWith(parameters.name, 'WinVS2017') }}:
        - script: cmake . -G "${{ parameters.cmakeGenerator }}"
          displayName: CMake
      - ${{ if startsWith(parameters.name, 'WinVS2019') }}:
        - script: cmake . -G "${{ parameters.cmakeGenerator }}" -A ${{ parameters.arch }}
          displayName: CMake
      - script: |
          cmake --build . --config ${{ parameters.config }} --target download_deps || \
          cmake --build . --config ${{ parameters.config }} --target download_deps || \
          cmake --build . --config ${{ parameters.config }} --target download_deps
        displayName: Download dependencies
      - script: cmake --build . --config ${{ parameters.config }}
        displayName: Build
      - script: ctest --verbose --build-config ${{ parameters.config }}
        displayName: Test
      - script: cmake --build . --config ${{ parameters.config }} --target PACKAGE
        displayName: Package binaries
      - bash: |
          set -ex
          [ "`./bin/neko -version`" == "$(NEKO_VERSION)" ]
        displayName: Check version
      - task: PublishPipelineArtifact@0
        inputs:
          artifactName: ${{ parameters.name }}Binaries
          ${{ if eq(parameters.arch, 'Win32') }}:
            targetPath: bin/neko-$(NEKO_VERSION)-win.zip
          ${{ if eq(parameters.arch, 'x64') }}:
            targetPath: bin/neko-$(NEKO_VERSION)-win64.zip
