/*
 * Copyright (C)2005-2022 Haxe Foundation
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

type t

neko("
	 regexp_matched_pos = $loader.loadprim('regexp@regexp_matched_pos',2);
");

var build : string -> t = neko("$loader.loadprim('regexp@regexp_new',1)");
var find : t -> string -> int -> int -> bool = neko("$loader.loadprim('regexp@regexp_match',4)");
var matched : t -> int -> string = neko("$loader.loadprim('regexp@regexp_matched',2)");

function matched_pos( r : t, n : int ) : (int , int) {
	neko("
		var s = regexp_matched_pos(r,n);
		$array(s.pos,s.len);
	");
}

function split( r, str ) {
	function rec loop(pos,len) {
		if !find  r str pos len then
			[String.sub str pos len]
		else {
			var ppos, plen = matched_pos r 0;
			var tot = ppos - pos + plen;
			String.sub str pos (ppos - pos) :: loop (pos + tot) (len - tot)
		}
	}
	loop 0 String.length(str)
}