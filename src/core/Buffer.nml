/*
 * Copyright (C)2005-2022 Haxe Foundation
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

type t;

neko("

	@buffer_new = $loader.loadprim('std@buffer_new',0);
	@buffer_add = $loader.loadprim('std@buffer_add',2);
	@buffer_add_sub = $loader.loadprim('std@buffer_add_sub',4);
	@buffer_add_char = $loader.loadprim('std@buffer_add_char',2);
	@buffer_string = $loader.loadprim('std@buffer_string',1);
	@buffer_reset = $loader.loadprim('std@buffer_reset',1);

");

function create() : t {
	neko("@buffer_new()");
}

function add(b:t,x : 'a) : void {
	neko("@buffer_add(b,x)");
}

function reset(b:t) : void {
	neko("@buffer_reset(b)");
}


var string : t -> string = neko("@buffer_string");
var add_sub : t -> string -> int -> int -> void = neko("@buffer_add_sub");
var add_char : t -> char -> void = neko("@buffer_add_char");
